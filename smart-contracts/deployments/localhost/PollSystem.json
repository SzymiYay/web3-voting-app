{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [],
      "name": "PollSystem__AlreadyLocked",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PollSystem__AlreadyVoted",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PollSystem__InvalidAnswersCount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PollSystem__InvalidOption",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PollSystem__PollEnded",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PollSystem__PollLocked",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PollSystem__YouAreNotTheCreator",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "question",
          "type": "string"
        },
        {
          "internalType": "string[]",
          "name": "options",
          "type": "string[]"
        },
        {
          "internalType": "uint64",
          "name": "possibleAnswers",
          "type": "uint64"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "name": "createPoll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "getMyPolls",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOpenPolls",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "pollId",
          "type": "bytes32"
        }
      ],
      "name": "getPoll",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        },
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "enum PollSystem.State",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "pollId",
          "type": "bytes32"
        }
      ],
      "name": "getPollResults",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "pollId",
          "type": "bytes32"
        }
      ],
      "name": "getPollState",
      "outputs": [
        {
          "internalType": "enum PollSystem.State",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "pollId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "voter",
          "type": "address"
        }
      ],
      "name": "hasVoted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "pollId",
          "type": "bytes32"
        }
      ],
      "name": "lockPoll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_pollIds",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "s_polls",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "question",
          "type": "string"
        },
        {
          "internalType": "uint64",
          "name": "possibleAnswers",
          "type": "uint64"
        },
        {
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        },
        {
          "internalType": "enum PollSystem.State",
          "name": "state",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "creator",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "pollId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256[]",
          "name": "chosenOptions",
          "type": "uint256[]"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x3cff32580cca7270f520054566e3663bc4465a119ab0b3245af0ef2d74f08be6",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "1805332",
    "logsBloom": "0x
    "blockHash": "0x07df846d6c0d120cfb8f18c837689c2d5fc3b47c14db8affb7305bc9a5e92e9e",
    "transactionHash": "0x3cff32580cca7270f520054566e3663bc4465a119ab0b3245af0ef2d74f08be6",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "1805332",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "decc1ddc2bc3776ee1bbd86812627dd3",
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"PollSystem__AlreadyLocked\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PollSystem__AlreadyVoted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PollSystem__InvalidAnswersCount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PollSystem__InvalidOption\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PollSystem__PollEnded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PollSystem__PollLocked\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PollSystem__YouAreNotTheCreator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"question\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"options\",\"type\":\"string[]\"},{\"internalType\":\"uint64\",\"name\":\"possibleAnswers\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"createPoll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getMyPolls\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOpenPolls\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"pollId\",\"type\":\"bytes32\"}],\"name\":\"getPoll\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"enum PollSystem.State\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"pollId\",\"type\":\"bytes32\"}],\"name\":\"getPollResults\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"pollId\",\"type\":\"bytes32\"}],\"name\":\"getPollState\",\"outputs\":[{\"internalType\":\"enum PollSystem.State\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"pollId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"hasVoted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"pollId\",\"type\":\"bytes32\"}],\"name\":\"lockPoll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_pollIds\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"s_polls\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"question\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"possibleAnswers\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"enum PollSystem.State\",\"name\":\"state\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"pollId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"chosenOptions\",\"type\":\"uint256[]\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PollSystem.sol\":\"PollSystem\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PollSystem.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.23;\\n\\n// Errors\\nerror PollSystem__PollLocked();\\nerror PollSystem__PollEnded();\\nerror PollSystem__AlreadyVoted();\\nerror PollSystem__InvalidAnswersCount();\\nerror PollSystem__InvalidOption();\\nerror PollSystem__AlreadyLocked();\\nerror PollSystem__YouAreNotTheCreator();\\n\\ncontract PollSystem {\\n    // Types\\n    enum State {\\n        OPEN,\\n        LOCKED\\n    }\\n\\n    struct Poll {\\n        bytes32 id;\\n        string question;\\n        string[] options;\\n        uint64 possibleAnswers;\\n        mapping(address => bool) hasVoted;\\n        mapping(uint256 => uint256) votes;\\n        uint256 endTime;\\n        State state;\\n        address creator;\\n    }\\n\\n    // State Variables\\n    bytes32[] public s_pollIds;\\n    mapping(bytes32 => Poll) public s_polls;\\n\\n    // Functions\\n    function createPoll(\\n        bytes32 id,\\n        string memory question,\\n        string[] memory options,\\n        uint64 possibleAnswers,\\n        uint256 duration\\n    ) public {\\n        Poll storage newPoll = s_polls[id];\\n        s_pollIds.push(id);\\n\\n        newPoll.id = id;\\n        newPoll.question = question;\\n        newPoll.options = options;\\n        newPoll.possibleAnswers = possibleAnswers;\\n        newPoll.endTime = block.timestamp + duration;\\n        newPoll.state = State.OPEN;\\n        newPoll.creator = msg.sender;\\n    }\\n\\n    function vote(bytes32 pollId, uint256[] memory chosenOptions) public {\\n        Poll storage poll = s_polls[pollId];\\n\\n        if (poll.state != State.OPEN) revert PollSystem__PollLocked();\\n        if (block.timestamp >= poll.endTime) revert PollSystem__PollEnded();\\n        if (poll.hasVoted[msg.sender]) revert PollSystem__AlreadyVoted();\\n        if (chosenOptions.length == 0 || chosenOptions.length > poll.possibleAnswers)\\n            revert PollSystem__InvalidAnswersCount();\\n\\n        for (uint256 i = 0; i < chosenOptions.length; i++) {\\n            uint256 option = chosenOptions[i];\\n            if (option >= poll.options.length) revert PollSystem__InvalidOption();\\n            poll.votes[option] += 1;\\n        }\\n        poll.hasVoted[msg.sender] = true;\\n    }\\n\\n    function lockPoll(bytes32 pollId) public {\\n        Poll storage poll = s_polls[pollId];\\n        if (msg.sender != poll.creator) revert PollSystem__YouAreNotTheCreator();\\n        if (poll.state == State.LOCKED) revert PollSystem__AlreadyLocked();\\n        poll.state = State.LOCKED;\\n    }\\n\\n    // Views\\n    function getPollResults(bytes32 pollId) public view returns (uint256[] memory) {\\n        Poll storage poll = s_polls[pollId];\\n        uint256[] memory results = new uint256[](poll.options.length);\\n        for (uint256 i = 0; i < poll.options.length; i++) {\\n            results[i] = poll.votes[i];\\n        }\\n\\n        return results;\\n    }\\n\\n    function getMyPolls(address userAddress) public view returns (bytes32[] memory) {\\n        uint256 myPollsCount = 0;\\n        for (uint256 i = 0; i < s_pollIds.length; i++) {\\n            bytes32 pollId = s_pollIds[i];\\n            if (s_polls[pollId].creator == userAddress) {\\n                myPollsCount++;\\n            }\\n        }\\n\\n        bytes32[] memory myPolls = new bytes32[](myPollsCount);\\n        uint256 index = 0;\\n        for (uint256 i = 0; i < s_pollIds.length; i++) {\\n            bytes32 pollId = s_pollIds[i];\\n            if (s_polls[pollId].creator == userAddress) {\\n                myPolls[index] = pollId;\\n                index++;\\n            }\\n        }\\n\\n        return myPolls;\\n    }\\n\\n    function getOpenPolls() public view returns (bytes32[] memory) {\\n        uint256 openPollsCount = 0;\\n        for (uint256 i = 0; i < s_pollIds.length; i++) {\\n            bytes32 pollId = s_pollIds[i];\\n            if (s_polls[pollId].state == State.OPEN) {\\n                openPollsCount++;\\n            }\\n        }\\n\\n        bytes32[] memory openPolls = new bytes32[](openPollsCount);\\n        uint256 index = 0;\\n        for (uint256 i = 0; i < s_pollIds.length; i++) {\\n            bytes32 pollId = s_pollIds[i];\\n            if (s_polls[pollId].state == State.OPEN) {\\n                openPolls[index] = pollId;\\n                index++;\\n            }\\n        }\\n\\n        return openPolls;\\n    }\\n\\n    function hasVoted(bytes32 pollId, address voter) public view returns (bool) {\\n        return s_polls[pollId].hasVoted[voter];\\n    }\\n\\n    function getPollState(bytes32 pollId) public view returns (State) {\\n        return s_polls[pollId].state;\\n    }\\n\\n    function getPoll(\\n        bytes32 pollId\\n    ) public view returns (bytes32, string memory, string[] memory, uint64, uint256, State, address) {\\n        Poll storage poll = s_polls[pollId];\\n        return (poll.id, poll.question, poll.options, poll.possibleAnswers, poll.endTime, poll.state, poll.creator);\\n    }\\n}\\n\",\"keccak256\":\"0x7d7205a3ed20db4e121d749c636cb4e22c0736354ed6ad22c9046c56eb40a379\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611fc7806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80638118d937116100715780638118d9371461017c578063aadc3b7214610198578063c65e41f8146101c8578063d7fd5c0f146101f8578063e065a36314610216578063ef592e881461024b576100a9565b80630ab066da146100ae578063213d8867146100ca5780632689b2ba146100fa5780632cbbd7381461012a578063395cb57914610160575b600080fd5b6100c860048036038101906100c391906110f1565b61027b565b005b6100e460048036038101906100df919061117c565b6103ba565b6040516100f19190611267565b60405180910390f35b610114600480360381019061010f91906110f1565b6105a8565b6040516101219190611351565b60405180910390f35b610144600480360381019061013f91906110f1565b610674565b60405161015797969594939291906115d6565b60405180910390f35b61017a600480360381019061017591906118c6565b610871565b005b61019660048036038101906101919190611a3c565b61099c565b005b6101b260048036038101906101ad9190611a98565b610c54565b6040516101bf9190611af3565b60405180910390f35b6101e260048036038101906101dd9190611b0e565b610cbf565b6040516101ef9190611b3b565b60405180910390f35b610200610ce3565b60405161020d9190611267565b60405180910390f35b610230600480360381019061022b91906110f1565b610e9b565b60405161024296959493929190611b56565b60405180910390f35b610265600480360381019061026091906110f1565b610fa0565b6040516102729190611bbe565b60405180910390f35b60006001600083815260200190815260200160002090508060070160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461031b576040517f4b540c8400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018081111561032e5761032d611550565b5b8160070160009054906101000a900460ff16600181111561035257610351611550565b5b03610389576040517f6472a02800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018160070160006101000a81548160ff021916908360018111156103b1576103b0611550565b5b02179055505050565b60606000805b6000805490508110156104755760008082815481106103e2576103e1611bd9565b5b906000526020600020015490508473ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060070160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361046757828061046390611c37565b9350505b5080806001019150506103c0565b5060008167ffffffffffffffff8111156104925761049161165d565b5b6040519080825280602002602001820160405280156104c05781602001602082028036833780820191505090505b5090506000805b60008054905081101561059c5760008082815481106104e9576104e8611bd9565b5b906000526020600020015490508673ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060070160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361058e578084848151811061057357610572611bd9565b5b602002602001018181525050828061058a90611c37565b9350505b5080806001019150506104c7565b50819350505050919050565b606060006001600084815260200190815260200160002090506000816002018054905067ffffffffffffffff8111156105e4576105e361165d565b5b6040519080825280602002602001820160405280156106125781602001602082028036833780820191505090505b50905060005b826002018054905081101561066957826005016000828152602001908152602001600020548282815181106106505761064f611bd9565b5b6020026020010181815250508080600101915050610618565b508092505050919050565b60006060806000806000806000600160008a81526020019081526020016000209050806000015481600101826002018360030160009054906101000a900467ffffffffffffffff1684600601548560070160009054906101000a900460ff168660070160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685805461070490611cae565b80601f016020809104026020016040519081016040528092919081815260200182805461073090611cae565b801561077d5780601f106107525761010080835404028352916020019161077d565b820191906000526020600020905b81548152906001019060200180831161076057829003601f168201915b5050505050955084805480602002602001604051908101604052809291908181526020016000905b828210156108515783829060005260206000200180546107c490611cae565b80601f01602080910402602001604051908101604052809291908181526020018280546107f090611cae565b801561083d5780601f106108125761010080835404028352916020019161083d565b820191906000526020600020905b81548152906001019060200180831161082057829003601f168201915b5050505050815260200190600101906107a5565b505050509450975097509750975097509750975050919395979092949650565b60006001600087815260200190815260200160002090506000869080600181540180825580915050600190039060005260206000200160009091909190915055858160000181905550848160010190816108cb9190611e8b565b50838160020190805190602001906108e4929190610fcd565b50828160030160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550814261091c9190611f5d565b816006018190555060008160070160006101000a81548160ff0219169083600181111561094c5761094b611550565b5b0217905550338160070160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050505050565b6000600160008481526020019081526020016000209050600060018111156109c7576109c6611550565b5b8160070160009054906101000a900460ff1660018111156109eb576109ea611550565b5b14610a22576040517f6fcc1e3e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600601544210610a5f576040517f3f7c7c3d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610ae5576040517f46bec57800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082511480610b1757508060030160009054906101000a900467ffffffffffffffff1667ffffffffffffffff168251115b15610b4e576040517f7b2c6c5100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b8251811015610bf4576000838281518110610b6f57610b6e611bd9565b5b6020026020010151905082600201805490508110610bb9576040517f82f7abc900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018360050160008381526020019081526020016000206000828254610bdf9190611f5d565b92505081905550508080600101915050610b51565b5060018160040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505050565b60006001600084815260200190815260200160002060040160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60008181548110610ccf57600080fd5b906000526020600020016000915090505481565b60606000805b600080549050811015610d84576000808281548110610d0b57610d0a611bd9565b5b9060005260206000200154905060006001811115610d2c57610d2b611550565b5b6001600083815260200190815260200160002060070160009054906101000a900460ff166001811115610d6257610d61611550565b5b03610d76578280610d7290611c37565b9350505b508080600101915050610ce9565b5060008167ffffffffffffffff811115610da157610da061165d565b5b604051908082528060200260200182016040528015610dcf5781602001602082028036833780820191505090505b5090506000805b600080549050811015610e91576000808281548110610df857610df7611bd9565b5b9060005260206000200154905060006001811115610e1957610e18611550565b5b6001600083815260200190815260200160002060070160009054906101000a900460ff166001811115610e4f57610e4e611550565b5b03610e835780848481518110610e6857610e67611bd9565b5b6020026020010181815250508280610e7f90611c37565b9350505b508080600101915050610dd6565b5081935050505090565b6001602052806000526040600020600091509050806000015490806001018054610ec490611cae565b80601f0160208091040260200160405190810160405280929190818152602001828054610ef090611cae565b8015610f3d5780601f10610f1257610100808354040283529160200191610f3d565b820191906000526020600020905b815481529060010190602001808311610f2057829003601f168201915b5050505050908060030160009054906101000a900467ffffffffffffffff16908060060154908060070160009054906101000a900460ff16908060070160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905086565b60006001600083815260200190815260200160002060070160009054906101000a900460ff169050919050565b828054828255906000526020600020908101928215611015579160200282015b828111156110145782518290816110049190611e8b565b5091602001919060010190610fed565b5b5090506110229190611026565b5090565b5b80821115611046576000818161103d919061104a565b50600101611027565b5090565b50805461105690611cae565b6000825580601f106110685750611087565b601f016020900490600052602060002090810190611086919061108a565b5b50565b5b808211156110a357600081600090555060010161108b565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6110ce816110bb565b81146110d957600080fd5b50565b6000813590506110eb816110c5565b92915050565b600060208284031215611107576111066110b1565b5b6000611115848285016110dc565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006111498261111e565b9050919050565b6111598161113e565b811461116457600080fd5b50565b60008135905061117681611150565b92915050565b600060208284031215611192576111916110b1565b5b60006111a084828501611167565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6111de816110bb565b82525050565b60006111f083836111d5565b60208301905092915050565b6000602082019050919050565b6000611214826111a9565b61121e81856111b4565b9350611229836111c5565b8060005b8381101561125a57815161124188826111e4565b975061124c836111fc565b92505060018101905061122d565b5085935050505092915050565b600060208201905081810360008301526112818184611209565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b6112c8816112b5565b82525050565b60006112da83836112bf565b60208301905092915050565b6000602082019050919050565b60006112fe82611289565b6113088185611294565b9350611313836112a5565b8060005b8381101561134457815161132b88826112ce565b9750611336836112e6565b925050600181019050611317565b5085935050505092915050565b6000602082019050818103600083015261136b81846112f3565b905092915050565b61137c816110bb565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156113bc5780820151818401526020810190506113a1565b60008484015250505050565b6000601f19601f8301169050919050565b60006113e482611382565b6113ee818561138d565b93506113fe81856020860161139e565b611407816113c8565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b600061145a82611382565b611464818561143e565b935061147481856020860161139e565b61147d816113c8565b840191505092915050565b6000611494838361144f565b905092915050565b6000602082019050919050565b60006114b482611412565b6114be818561141d565b9350836020820285016114d08561142e565b8060005b8581101561150c57848403895281516114ed8582611488565b94506114f88361149c565b925060208a019950506001810190506114d4565b50829750879550505050505092915050565b600067ffffffffffffffff82169050919050565b61153b8161151e565b82525050565b61154a816112b5565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600281106115905761158f611550565b5b50565b60008190506115a18261157f565b919050565b60006115b182611593565b9050919050565b6115c1816115a6565b82525050565b6115d08161113e565b82525050565b600060e0820190506115eb600083018a611373565b81810360208301526115fd81896113d9565b9050818103604083015261161181886114a9565b90506116206060830187611532565b61162d6080830186611541565b61163a60a08301856115b8565b61164760c08301846115c7565b98975050505050505050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611695826113c8565b810181811067ffffffffffffffff821117156116b4576116b361165d565b5b80604052505050565b60006116c76110a7565b90506116d3828261168c565b919050565b600067ffffffffffffffff8211156116f3576116f261165d565b5b6116fc826113c8565b9050602081019050919050565b82818337600083830152505050565b600061172b611726846116d8565b6116bd565b90508281526020810184848401111561174757611746611658565b5b611752848285611709565b509392505050565b600082601f83011261176f5761176e611653565b5b813561177f848260208601611718565b91505092915050565b600067ffffffffffffffff8211156117a3576117a261165d565b5b602082029050602081019050919050565b600080fd5b60006117cc6117c784611788565b6116bd565b905080838252602082019050602084028301858111156117ef576117ee6117b4565b5b835b8181101561183657803567ffffffffffffffff81111561181457611813611653565b5b808601611821898261175a565b855260208501945050506020810190506117f1565b5050509392505050565b600082601f83011261185557611854611653565b5b81356118658482602086016117b9565b91505092915050565b6118778161151e565b811461188257600080fd5b50565b6000813590506118948161186e565b92915050565b6118a3816112b5565b81146118ae57600080fd5b50565b6000813590506118c08161189a565b92915050565b600080600080600060a086880312156118e2576118e16110b1565b5b60006118f0888289016110dc565b955050602086013567ffffffffffffffff811115611911576119106110b6565b5b61191d8882890161175a565b945050604086013567ffffffffffffffff81111561193e5761193d6110b6565b5b61194a88828901611840565b935050606061195b88828901611885565b925050608061196c888289016118b1565b9150509295509295909350565b600067ffffffffffffffff8211156119945761199361165d565b5b602082029050602081019050919050565b60006119b86119b384611979565b6116bd565b905080838252602082019050602084028301858111156119db576119da6117b4565b5b835b81811015611a0457806119f088826118b1565b8452602084019350506020810190506119dd565b5050509392505050565b600082601f830112611a2357611a22611653565b5b8135611a338482602086016119a5565b91505092915050565b60008060408385031215611a5357611a526110b1565b5b6000611a61858286016110dc565b925050602083013567ffffffffffffffff811115611a8257611a816110b6565b5b611a8e85828601611a0e565b9150509250929050565b60008060408385031215611aaf57611aae6110b1565b5b6000611abd858286016110dc565b9250506020611ace85828601611167565b9150509250929050565b60008115159050919050565b611aed81611ad8565b82525050565b6000602082019050611b086000830184611ae4565b92915050565b600060208284031215611b2457611b236110b1565b5b6000611b32848285016118b1565b91505092915050565b6000602082019050611b506000830184611373565b92915050565b600060c082019050611b6b6000830189611373565b8181036020830152611b7d81886113d9565b9050611b8c6040830187611532565b611b996060830186611541565b611ba660808301856115b8565b611bb360a08301846115c7565b979650505050505050565b6000602082019050611bd360008301846115b8565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611c42826112b5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611c7457611c73611c08565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611cc657607f821691505b602082108103611cd957611cd8611c7f565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302611d417fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611d04565b611d4b8683611d04565b95508019841693508086168417925050509392505050565b6000819050919050565b6000611d88611d83611d7e846112b5565b611d63565b6112b5565b9050919050565b6000819050919050565b611da283611d6d565b611db6611dae82611d8f565b848454611d11565b825550505050565b600090565b611dcb611dbe565b611dd6818484611d99565b505050565b5b81811015611dfa57611def600082611dc3565b600181019050611ddc565b5050565b601f821115611e3f57611e1081611cdf565b611e1984611cf4565b81016020851015611e28578190505b611e3c611e3485611cf4565b830182611ddb565b50505b505050565b600082821c905092915050565b6000611e6260001984600802611e44565b1980831691505092915050565b6000611e7b8383611e51565b9150826002028217905092915050565b611e9482611382565b67ffffffffffffffff811115611ead57611eac61165d565b5b611eb78254611cae565b611ec2828285611dfe565b600060209050601f831160018114611ef55760008415611ee3578287015190505b611eed8582611e6f565b865550611f55565b601f198416611f0386611cdf565b60005b82811015611f2b57848901518255600182019150602085019450602081019050611f06565b86831015611f485784890151611f44601f891682611e51565b8355505b6001600288020188555050505b505050505050565b6000611f68826112b5565b9150611f73836112b5565b9250828201905080821115611f8b57611f8a611c08565b5b9291505056fea264697066735822122073e3c86fcc776f6aa43d885479f8f582e843bb35ea673b2107fb070f490c122664736f6c63430008180033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c80638118d937116100715780638118d9371461017c578063aadc3b7214610198578063c65e41f8146101c8578063d7fd5c0f146101f8578063e065a36314610216578063ef592e881461024b576100a9565b80630ab066da146100ae578063213d8867146100ca5780632689b2ba146100fa5780632cbbd7381461012a578063395cb57914610160575b600080fd5b6100c860048036038101906100c391906110f1565b61027b565b005b6100e460048036038101906100df919061117c565b6103ba565b6040516100f19190611267565b60405180910390f35b610114600480360381019061010f91906110f1565b6105a8565b6040516101219190611351565b60405180910390f35b610144600480360381019061013f91906110f1565b610674565b60405161015797969594939291906115d6565b60405180910390f35b61017a600480360381019061017591906118c6565b610871565b005b61019660048036038101906101919190611a3c565b61099c565b005b6101b260048036038101906101ad9190611a98565b610c54565b6040516101bf9190611af3565b60405180910390f35b6101e260048036038101906101dd9190611b0e565b610cbf565b6040516101ef9190611b3b565b60405180910390f35b610200610ce3565b60405161020d9190611267565b60405180910390f35b610230600480360381019061022b91906110f1565b610e9b565b60405161024296959493929190611b56565b60405180910390f35b610265600480360381019061026091906110f1565b610fa0565b6040516102729190611bbe565b60405180910390f35b60006001600083815260200190815260200160002090508060070160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461031b576040517f4b540c8400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018081111561032e5761032d611550565b5b8160070160009054906101000a900460ff16600181111561035257610351611550565b5b03610389576040517f6472a02800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018160070160006101000a81548160ff021916908360018111156103b1576103b0611550565b5b02179055505050565b60606000805b6000805490508110156104755760008082815481106103e2576103e1611bd9565b5b906000526020600020015490508473ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060070160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361046757828061046390611c37565b9350505b5080806001019150506103c0565b5060008167ffffffffffffffff8111156104925761049161165d565b5b6040519080825280602002602001820160405280156104c05781602001602082028036833780820191505090505b5090506000805b60008054905081101561059c5760008082815481106104e9576104e8611bd9565b5b906000526020600020015490508673ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060070160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361058e578084848151811061057357610572611bd9565b5b602002602001018181525050828061058a90611c37565b9350505b5080806001019150506104c7565b50819350505050919050565b606060006001600084815260200190815260200160002090506000816002018054905067ffffffffffffffff8111156105e4576105e361165d565b5b6040519080825280602002602001820160405280156106125781602001602082028036833780820191505090505b50905060005b826002018054905081101561066957826005016000828152602001908152602001600020548282815181106106505761064f611bd9565b5b6020026020010181815250508080600101915050610618565b508092505050919050565b60006060806000806000806000600160008a81526020019081526020016000209050806000015481600101826002018360030160009054906101000a900467ffffffffffffffff1684600601548560070160009054906101000a900460ff168660070160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685805461070490611cae565b80601f016020809104026020016040519081016040528092919081815260200182805461073090611cae565b801561077d5780601f106107525761010080835404028352916020019161077d565b820191906000526020600020905b81548152906001019060200180831161076057829003601f168201915b5050505050955084805480602002602001604051908101604052809291908181526020016000905b828210156108515783829060005260206000200180546107c490611cae565b80601f01602080910402602001604051908101604052809291908181526020018280546107f090611cae565b801561083d5780601f106108125761010080835404028352916020019161083d565b820191906000526020600020905b81548152906001019060200180831161082057829003601f168201915b5050505050815260200190600101906107a5565b505050509450975097509750975097509750975050919395979092949650565b60006001600087815260200190815260200160002090506000869080600181540180825580915050600190039060005260206000200160009091909190915055858160000181905550848160010190816108cb9190611e8b565b50838160020190805190602001906108e4929190610fcd565b50828160030160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550814261091c9190611f5d565b816006018190555060008160070160006101000a81548160ff0219169083600181111561094c5761094b611550565b5b0217905550338160070160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050505050565b6000600160008481526020019081526020016000209050600060018111156109c7576109c6611550565b5b8160070160009054906101000a900460ff1660018111156109eb576109ea611550565b5b14610a22576040517f6fcc1e3e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600601544210610a5f576040517f3f7c7c3d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610ae5576040517f46bec57800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082511480610b1757508060030160009054906101000a900467ffffffffffffffff1667ffffffffffffffff168251115b15610b4e576040517f7b2c6c5100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b8251811015610bf4576000838281518110610b6f57610b6e611bd9565b5b6020026020010151905082600201805490508110610bb9576040517f82f7abc900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018360050160008381526020019081526020016000206000828254610bdf9190611f5d565b92505081905550508080600101915050610b51565b5060018160040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505050565b60006001600084815260200190815260200160002060040160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60008181548110610ccf57600080fd5b906000526020600020016000915090505481565b60606000805b600080549050811015610d84576000808281548110610d0b57610d0a611bd9565b5b9060005260206000200154905060006001811115610d2c57610d2b611550565b5b6001600083815260200190815260200160002060070160009054906101000a900460ff166001811115610d6257610d61611550565b5b03610d76578280610d7290611c37565b9350505b508080600101915050610ce9565b5060008167ffffffffffffffff811115610da157610da061165d565b5b604051908082528060200260200182016040528015610dcf5781602001602082028036833780820191505090505b5090506000805b600080549050811015610e91576000808281548110610df857610df7611bd9565b5b9060005260206000200154905060006001811115610e1957610e18611550565b5b6001600083815260200190815260200160002060070160009054906101000a900460ff166001811115610e4f57610e4e611550565b5b03610e835780848481518110610e6857610e67611bd9565b5b6020026020010181815250508280610e7f90611c37565b9350505b508080600101915050610dd6565b5081935050505090565b6001602052806000526040600020600091509050806000015490806001018054610ec490611cae565b80601f0160208091040260200160405190810160405280929190818152602001828054610ef090611cae565b8015610f3d5780601f10610f1257610100808354040283529160200191610f3d565b820191906000526020600020905b815481529060010190602001808311610f2057829003601f168201915b5050505050908060030160009054906101000a900467ffffffffffffffff16908060060154908060070160009054906101000a900460ff16908060070160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905086565b60006001600083815260200190815260200160002060070160009054906101000a900460ff169050919050565b828054828255906000526020600020908101928215611015579160200282015b828111156110145782518290816110049190611e8b565b5091602001919060010190610fed565b5b5090506110229190611026565b5090565b5b80821115611046576000818161103d919061104a565b50600101611027565b5090565b50805461105690611cae565b6000825580601f106110685750611087565b601f016020900490600052602060002090810190611086919061108a565b5b50565b5b808211156110a357600081600090555060010161108b565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6110ce816110bb565b81146110d957600080fd5b50565b6000813590506110eb816110c5565b92915050565b600060208284031215611107576111066110b1565b5b6000611115848285016110dc565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006111498261111e565b9050919050565b6111598161113e565b811461116457600080fd5b50565b60008135905061117681611150565b92915050565b600060208284031215611192576111916110b1565b5b60006111a084828501611167565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6111de816110bb565b82525050565b60006111f083836111d5565b60208301905092915050565b6000602082019050919050565b6000611214826111a9565b61121e81856111b4565b9350611229836111c5565b8060005b8381101561125a57815161124188826111e4565b975061124c836111fc565b92505060018101905061122d565b5085935050505092915050565b600060208201905081810360008301526112818184611209565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b6112c8816112b5565b82525050565b60006112da83836112bf565b60208301905092915050565b6000602082019050919050565b60006112fe82611289565b6113088185611294565b9350611313836112a5565b8060005b8381101561134457815161132b88826112ce565b9750611336836112e6565b925050600181019050611317565b5085935050505092915050565b6000602082019050818103600083015261136b81846112f3565b905092915050565b61137c816110bb565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156113bc5780820151818401526020810190506113a1565b60008484015250505050565b6000601f19601f8301169050919050565b60006113e482611382565b6113ee818561138d565b93506113fe81856020860161139e565b611407816113c8565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b600061145a82611382565b611464818561143e565b935061147481856020860161139e565b61147d816113c8565b840191505092915050565b6000611494838361144f565b905092915050565b6000602082019050919050565b60006114b482611412565b6114be818561141d565b9350836020820285016114d08561142e565b8060005b8581101561150c57848403895281516114ed8582611488565b94506114f88361149c565b925060208a019950506001810190506114d4565b50829750879550505050505092915050565b600067ffffffffffffffff82169050919050565b61153b8161151e565b82525050565b61154a816112b5565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600281106115905761158f611550565b5b50565b60008190506115a18261157f565b919050565b60006115b182611593565b9050919050565b6115c1816115a6565b82525050565b6115d08161113e565b82525050565b600060e0820190506115eb600083018a611373565b81810360208301526115fd81896113d9565b9050818103604083015261161181886114a9565b90506116206060830187611532565b61162d6080830186611541565b61163a60a08301856115b8565b61164760c08301846115c7565b98975050505050505050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611695826113c8565b810181811067ffffffffffffffff821117156116b4576116b361165d565b5b80604052505050565b60006116c76110a7565b90506116d3828261168c565b919050565b600067ffffffffffffffff8211156116f3576116f261165d565b5b6116fc826113c8565b9050602081019050919050565b82818337600083830152505050565b600061172b611726846116d8565b6116bd565b90508281526020810184848401111561174757611746611658565b5b611752848285611709565b509392505050565b600082601f83011261176f5761176e611653565b5b813561177f848260208601611718565b91505092915050565b600067ffffffffffffffff8211156117a3576117a261165d565b5b602082029050602081019050919050565b600080fd5b60006117cc6117c784611788565b6116bd565b905080838252602082019050602084028301858111156117ef576117ee6117b4565b5b835b8181101561183657803567ffffffffffffffff81111561181457611813611653565b5b808601611821898261175a565b855260208501945050506020810190506117f1565b5050509392505050565b600082601f83011261185557611854611653565b5b81356118658482602086016117b9565b91505092915050565b6118778161151e565b811461188257600080fd5b50565b6000813590506118948161186e565b92915050565b6118a3816112b5565b81146118ae57600080fd5b50565b6000813590506118c08161189a565b92915050565b600080600080600060a086880312156118e2576118e16110b1565b5b60006118f0888289016110dc565b955050602086013567ffffffffffffffff811115611911576119106110b6565b5b61191d8882890161175a565b945050604086013567ffffffffffffffff81111561193e5761193d6110b6565b5b61194a88828901611840565b935050606061195b88828901611885565b925050608061196c888289016118b1565b9150509295509295909350565b600067ffffffffffffffff8211156119945761199361165d565b5b602082029050602081019050919050565b60006119b86119b384611979565b6116bd565b905080838252602082019050602084028301858111156119db576119da6117b4565b5b835b81811015611a0457806119f088826118b1565b8452602084019350506020810190506119dd565b5050509392505050565b600082601f830112611a2357611a22611653565b5b8135611a338482602086016119a5565b91505092915050565b60008060408385031215611a5357611a526110b1565b5b6000611a61858286016110dc565b925050602083013567ffffffffffffffff811115611a8257611a816110b6565b5b611a8e85828601611a0e565b9150509250929050565b60008060408385031215611aaf57611aae6110b1565b5b6000611abd858286016110dc565b9250506020611ace85828601611167565b9150509250929050565b60008115159050919050565b611aed81611ad8565b82525050565b6000602082019050611b086000830184611ae4565b92915050565b600060208284031215611b2457611b236110b1565b5b6000611b32848285016118b1565b91505092915050565b6000602082019050611b506000830184611373565b92915050565b600060c082019050611b6b6000830189611373565b8181036020830152611b7d81886113d9565b9050611b8c6040830187611532565b611b996060830186611541565b611ba660808301856115b8565b611bb360a08301846115c7565b979650505050505050565b6000602082019050611bd360008301846115b8565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611c42826112b5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611c7457611c73611c08565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611cc657607f821691505b602082108103611cd957611cd8611c7f565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302611d417fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611d04565b611d4b8683611d04565b95508019841693508086168417925050509392505050565b6000819050919050565b6000611d88611d83611d7e846112b5565b611d63565b6112b5565b9050919050565b6000819050919050565b611da283611d6d565b611db6611dae82611d8f565b848454611d11565b825550505050565b600090565b611dcb611dbe565b611dd6818484611d99565b505050565b5b81811015611dfa57611def600082611dc3565b600181019050611ddc565b5050565b601f821115611e3f57611e1081611cdf565b611e1984611cf4565b81016020851015611e28578190505b611e3c611e3485611cf4565b830182611ddb565b50505b505050565b600082821c905092915050565b6000611e6260001984600802611e44565b1980831691505092915050565b6000611e7b8383611e51565b9150826002028217905092915050565b611e9482611382565b67ffffffffffffffff811115611ead57611eac61165d565b5b611eb78254611cae565b611ec2828285611dfe565b600060209050601f831160018114611ef55760008415611ee3578287015190505b611eed8582611e6f565b865550611f55565b601f198416611f0386611cdf565b60005b82811015611f2b57848901518255600182019150602085019450602081019050611f06565b86831015611f485784890151611f44601f891682611e51565b8355505b6001600288020188555050505b505050505050565b6000611f68826112b5565b9150611f73836112b5565b9250828201905080821115611f8b57611f8a611c08565b5b9291505056fea264697066735822122073e3c86fcc776f6aa43d885479f8f582e843bb35ea673b2107fb070f490c122664736f6c63430008180033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 46,
        "contract": "contracts/PollSystem.sol:PollSystem",
        "label": "s_pollIds",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_bytes32)dyn_storage"
      },
      {
        "astId": 51,
        "contract": "contracts/PollSystem.sol:PollSystem",
        "label": "s_polls",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_bytes32,t_struct(Poll)43_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_bytes32)dyn_storage": {
        "base": "t_bytes32",
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_enum(State)18": {
        "encoding": "inplace",
        "label": "enum PollSystem.State",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_bytes32,t_struct(Poll)43_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct PollSystem.Poll)",
        "numberOfBytes": "32",
        "value": "t_struct(Poll)43_storage"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Poll)43_storage": {
        "encoding": "inplace",
        "label": "struct PollSystem.Poll",
        "members": [
          {
            "astId": 20,
            "contract": "contracts/PollSystem.sol:PollSystem",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_bytes32"
          },
          {
            "astId": 22,
            "contract": "contracts/PollSystem.sol:PollSystem",
            "label": "question",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 25,
            "contract": "contracts/PollSystem.sol:PollSystem",
            "label": "options",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_string_storage)dyn_storage"
          },
          {
            "astId": 27,
            "contract": "contracts/PollSystem.sol:PollSystem",
            "label": "possibleAnswers",
            "offset": 0,
            "slot": "3",
            "type": "t_uint64"
          },
          {
            "astId": 31,
            "contract": "contracts/PollSystem.sol:PollSystem",
            "label": "hasVoted",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_bool)"
          },
          {
            "astId": 35,
            "contract": "contracts/PollSystem.sol:PollSystem",
            "label": "votes",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_uint256)"
          },
          {
            "astId": 37,
            "contract": "contracts/PollSystem.sol:PollSystem",
            "label": "endTime",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 40,
            "contract": "contracts/PollSystem.sol:PollSystem",
            "label": "state",
            "offset": 0,
            "slot": "7",
            "type": "t_enum(State)18"
          },
          {
            "astId": 42,
            "contract": "contracts/PollSystem.sol:PollSystem",
            "label": "creator",
            "offset": 1,
            "slot": "7",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      }
    }
  }
}