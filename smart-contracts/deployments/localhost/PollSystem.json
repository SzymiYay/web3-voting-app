{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [],
      "name": "PollSystem__AlreadyLocked",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PollSystem__AlreadyVoted",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PollSystem__InvalidAnswersCount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PollSystem__InvalidOption",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PollSystem__NotYetEnded",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PollSystem__PollEnded",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PollSystem__PollLocked",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "question",
          "type": "string"
        },
        {
          "internalType": "string[]",
          "name": "options",
          "type": "string[]"
        },
        {
          "internalType": "uint64",
          "name": "possibleAnswers",
          "type": "uint64"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "name": "createPoll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOpenPolls",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "pollIndex",
          "type": "uint256"
        }
      ],
      "name": "getPoll",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        },
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "enum PollSystem.State",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "pollIndex",
          "type": "uint256"
        }
      ],
      "name": "getPollResults",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "pollIndex",
          "type": "uint256"
        }
      ],
      "name": "getPollState",
      "outputs": [
        {
          "internalType": "enum PollSystem.State",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "pollIndex",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "voter",
          "type": "address"
        }
      ],
      "name": "hasVoted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "pollIndex",
          "type": "uint256"
        }
      ],
      "name": "lockPoll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "m_polls",
      "outputs": [
        {
          "internalType": "string",
          "name": "question",
          "type": "string"
        },
        {
          "internalType": "uint64",
          "name": "possibleAnswers",
          "type": "uint64"
        },
        {
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        },
        {
          "internalType": "enum PollSystem.State",
          "name": "state",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "pollIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "chosenOptions",
          "type": "uint256[]"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x66d8b476329b591b47199a7160e7708035cc81646726c6ed99fd8e93fa0c0ca4",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "1509652",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x7ebadd1f34512b83d62b75d8f7a9d96a21c9f64938f5cdbf63a3458dc0da2bc1",
    "transactionHash": "0x66d8b476329b591b47199a7160e7708035cc81646726c6ed99fd8e93fa0c0ca4",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "1509652",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "2511c6737272bdc983ffdd656a325949",
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"PollSystem__AlreadyLocked\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PollSystem__AlreadyVoted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PollSystem__InvalidAnswersCount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PollSystem__InvalidOption\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PollSystem__NotYetEnded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PollSystem__PollEnded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PollSystem__PollLocked\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"question\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"options\",\"type\":\"string[]\"},{\"internalType\":\"uint64\",\"name\":\"possibleAnswers\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"createPoll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOpenPolls\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pollIndex\",\"type\":\"uint256\"}],\"name\":\"getPoll\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"enum PollSystem.State\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pollIndex\",\"type\":\"uint256\"}],\"name\":\"getPollResults\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pollIndex\",\"type\":\"uint256\"}],\"name\":\"getPollState\",\"outputs\":[{\"internalType\":\"enum PollSystem.State\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pollIndex\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"hasVoted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pollIndex\",\"type\":\"uint256\"}],\"name\":\"lockPoll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"m_polls\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"question\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"possibleAnswers\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"enum PollSystem.State\",\"name\":\"state\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pollIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"chosenOptions\",\"type\":\"uint256[]\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PollSystem.sol\":\"PollSystem\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PollSystem.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.23;\\n\\n// Errors\\nerror PollSystem__PollLocked();\\nerror PollSystem__PollEnded();\\nerror PollSystem__AlreadyVoted();\\nerror PollSystem__InvalidAnswersCount();\\nerror PollSystem__InvalidOption();\\nerror PollSystem__NotYetEnded();\\nerror PollSystem__AlreadyLocked();\\n\\ncontract PollSystem {\\n    // Types\\n    enum State {\\n        OPEN,\\n        LOCKED\\n    }\\n\\n    struct Poll {\\n        string question;\\n        string[] options;\\n        uint64 possibleAnswers;\\n        mapping(address => bool) hasVoted;\\n        mapping(uint256 => uint256) votes;\\n        uint256 endTime;\\n        State state;\\n    }\\n\\n    // State Variables\\n    Poll[] public m_polls;\\n\\n    // Functions\\n    function createPoll(\\n        string memory question,\\n        string[] memory options,\\n        uint64 possibleAnswers,\\n        uint256 duration\\n    ) public {\\n        Poll storage newPoll = m_polls.push();\\n        newPoll.question = question;\\n        newPoll.options = options;\\n        newPoll.possibleAnswers = possibleAnswers;\\n        newPoll.endTime = block.timestamp + duration;\\n        newPoll.state = State.OPEN;\\n    }\\n\\n    function vote(uint256 pollIndex, uint256[] memory chosenOptions) public {\\n        Poll storage poll = m_polls[pollIndex];\\n\\n        if (poll.state != State.OPEN) revert PollSystem__PollLocked();\\n        if (block.timestamp >= poll.endTime) revert PollSystem__PollEnded();\\n        if (poll.hasVoted[msg.sender]) revert PollSystem__AlreadyVoted();\\n        if (chosenOptions.length == 0 || chosenOptions.length > poll.possibleAnswers)\\n            revert PollSystem__InvalidAnswersCount();\\n\\n        for (uint256 i = 0; i < chosenOptions.length; i++) {\\n            uint256 option = chosenOptions[i];\\n            if (option >= poll.options.length) revert PollSystem__InvalidOption();\\n            poll.votes[option] += 1;\\n        }\\n        poll.hasVoted[msg.sender] = true;\\n    }\\n\\n    function lockPoll(uint256 pollIndex) public {\\n        Poll storage poll = m_polls[pollIndex];\\n        if (poll.state == State.LOCKED) revert PollSystem__AlreadyLocked();\\n        if (block.timestamp <= poll.endTime) revert PollSystem__NotYetEnded();\\n        poll.state = State.LOCKED;\\n    }\\n\\n    // Views\\n    function getPollResults(uint256 pollIndex) public view returns (uint256[] memory) {\\n        Poll storage poll = m_polls[pollIndex];\\n        uint256[] memory results = new uint256[](poll.options.length);\\n        for (uint256 i = 0; i < poll.options.length; i++) {\\n            results[i] = poll.votes[i];\\n        }\\n\\n        return results;\\n    }\\n\\n    function getOpenPolls() public view returns (uint256[] memory) {\\n        uint256 openPollsCount = 0;\\n        for (uint256 i = 0; i < m_polls.length; i++) {\\n            if (m_polls[i].state == State.OPEN) {\\n                openPollsCount++;\\n            }\\n        }\\n\\n        uint256[] memory openPolls = new uint256[](openPollsCount);\\n        uint256 index = 0;\\n        for (uint256 i = 0; i < m_polls.length; i++) {\\n            if (m_polls[i].state == State.OPEN) {\\n                openPolls[index] = i;\\n                index++;\\n            }\\n        }\\n\\n        return openPolls;\\n    }\\n\\n    function hasVoted(uint256 pollIndex, address voter) public view returns (bool) {\\n        return m_polls[pollIndex].hasVoted[voter];\\n    }\\n\\n    function getPollState(uint256 pollIndex) public view returns (State) {\\n        return m_polls[pollIndex].state;\\n    }\\n\\n    function getPoll(uint256 pollIndex) public view returns (string memory, string[] memory, uint64, uint256, State) {\\n        Poll storage poll = m_polls[pollIndex];\\n        return (poll.question, poll.options, poll.possibleAnswers, poll.endTime, poll.state);\\n    }\\n}\\n\",\"keccak256\":\"0xd418b3923007eec193415486730ae4bd881bbc467ab6aa45cdd31a24cc000769\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611a6d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80639a7d014c116100665780639a7d014c14610148578063afdda4ec1461017b578063d5f38dae146101ab578063d7fd5c0f146101c7578063dd4a335a146101e557610093565b80631a8cbcaa1461009857806333b4097b146100cc57806343859632146100fc5780637055d3681461012c575b600080fd5b6100b260048036038101906100ad9190610d8c565b610201565b6040516100c3959493929190610ffe565b60405180910390f35b6100e660048036038101906100e19190610d8c565b6103d9565b6040516100f3919061111d565b60405180910390f35b6101166004803603810190610111919061119d565b6104b3565b60405161012391906111f8565b60405180910390f35b6101466004803603810190610141919061135b565b61052c565b005b610162600480360381019061015d9190610d8c565b6107f2565b60405161017294939291906113b7565b60405180910390f35b61019560048036038101906101909190610d8c565b6108db565b6040516101a29190611403565b60405180910390f35b6101c560048036038101906101c091906115e0565b610916565b005b6101cf6109d7565b6040516101dc919061111d565b60405180910390f35b6101ff60048036038101906101fa9190610d8c565b610b67565b005b6060806000806000806000878154811061021e5761021d61167f565b5b9060005260206000209060070201905080600001816001018260020160009054906101000a900467ffffffffffffffff1683600501548460060160009054906101000a900460ff16848054610272906116dd565b80601f016020809104026020016040519081016040528092919081815260200182805461029e906116dd565b80156102eb5780601f106102c0576101008083540402835291602001916102eb565b820191906000526020600020905b8154815290600101906020018083116102ce57829003601f168201915b5050505050945083805480602002602001604051908101604052809291908181526020016000905b828210156103bf578382906000526020600020018054610332906116dd565b80601f016020809104026020016040519081016040528092919081815260200182805461035e906116dd565b80156103ab5780601f10610380576101008083540402835291602001916103ab565b820191906000526020600020905b81548152906001019060200180831161038e57829003601f168201915b505050505081526020019060010190610313565b505050509350955095509550955095505091939590929450565b606060008083815481106103f0576103ef61167f565b5b906000526020600020906007020190506000816001018054905067ffffffffffffffff81111561042357610422611218565b5b6040519080825280602002602001820160405280156104515781602001602082028036833780820191505090505b50905060005b82600101805490508110156104a8578260040160008281526020019081526020016000205482828151811061048f5761048e61167f565b5b6020026020010181815250508080600101915050610457565b508092505050919050565b60008083815481106104c8576104c761167f565b5b906000526020600020906007020160030160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60008083815481106105415761054061167f565b5b906000526020600020906007020190506000600181111561056557610564610f87565b5b8160060160009054906101000a900460ff16600181111561058957610588610f87565b5b146105c0576040517f6fcc1e3e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806005015442106105fd576040517f3f7c7c3d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060030160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610683576040517f46bec57800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000825114806106b557508060020160009054906101000a900467ffffffffffffffff1667ffffffffffffffff168251115b156106ec576040517f7b2c6c5100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b825181101561079257600083828151811061070d5761070c61167f565b5b6020026020010151905082600101805490508110610757576040517f82f7abc900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001836004016000838152602001908152602001600020600082825461077d919061173d565b925050819055505080806001019150506106ef565b5060018160030160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505050565b6000818154811061080257600080fd5b9060005260206000209060070201600091509050806000018054610825906116dd565b80601f0160208091040260200160405190810160405280929190818152602001828054610851906116dd565b801561089e5780601f106108735761010080835404028352916020019161089e565b820191906000526020600020905b81548152906001019060200180831161088157829003601f168201915b5050505050908060020160009054906101000a900467ffffffffffffffff16908060050154908060060160009054906101000a900460ff16905084565b60008082815481106108f0576108ef61167f565b5b906000526020600020906007020160060160009054906101000a900460ff169050919050565b60008060018160018154018082558091505003906000526020600020906007020190508481600001908161094a919061191d565b5083816001019080519060200190610963929190610c68565b50828160020160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550814261099b919061173d565b816005018190555060008160060160006101000a81548160ff021916908360018111156109cb576109ca610f87565b5b02179055505050505050565b60606000805b600080549050811015610a6457600060018111156109fe576109fd610f87565b5b60008281548110610a1257610a1161167f565b5b906000526020600020906007020160060160009054906101000a900460ff166001811115610a4357610a42610f87565b5b03610a57578180610a53906119ef565b9250505b80806001019150506109dd565b5060008167ffffffffffffffff811115610a8157610a80611218565b5b604051908082528060200260200182016040528015610aaf5781602001602082028036833780820191505090505b5090506000805b600080549050811015610b5d5760006001811115610ad757610ad6610f87565b5b60008281548110610aeb57610aea61167f565b5b906000526020600020906007020160060160009054906101000a900460ff166001811115610b1c57610b1b610f87565b5b03610b505780838381518110610b3557610b3461167f565b5b6020026020010181815250508180610b4c906119ef565b9250505b8080600101915050610ab6565b5081935050505090565b6000808281548110610b7c57610b7b61167f565b5b90600052602060002090600702019050600180811115610b9f57610b9e610f87565b5b8160060160009054906101000a900460ff166001811115610bc357610bc2610f87565b5b03610bfa576040517f6472a02800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600501544211610c37576040517feaa1e3b900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018160060160006101000a81548160ff02191690836001811115610c5f57610c5e610f87565b5b02179055505050565b828054828255906000526020600020908101928215610cb0579160200282015b82811115610caf578251829081610c9f919061191d565b5091602001919060010190610c88565b5b509050610cbd9190610cc1565b5090565b5b80821115610ce15760008181610cd89190610ce5565b50600101610cc2565b5090565b508054610cf1906116dd565b6000825580601f10610d035750610d22565b601f016020900490600052602060002090810190610d219190610d25565b5b50565b5b80821115610d3e576000816000905550600101610d26565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610d6981610d56565b8114610d7457600080fd5b50565b600081359050610d8681610d60565b92915050565b600060208284031215610da257610da1610d4c565b5b6000610db084828501610d77565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610df3578082015181840152602081019050610dd8565b60008484015250505050565b6000601f19601f8301169050919050565b6000610e1b82610db9565b610e258185610dc4565b9350610e35818560208601610dd5565b610e3e81610dff565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b6000610e9182610db9565b610e9b8185610e75565b9350610eab818560208601610dd5565b610eb481610dff565b840191505092915050565b6000610ecb8383610e86565b905092915050565b6000602082019050919050565b6000610eeb82610e49565b610ef58185610e54565b935083602082028501610f0785610e65565b8060005b85811015610f435784840389528151610f248582610ebf565b9450610f2f83610ed3565b925060208a01995050600181019050610f0b565b50829750879550505050505092915050565b600067ffffffffffffffff82169050919050565b610f7281610f55565b82525050565b610f8181610d56565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028110610fc757610fc6610f87565b5b50565b6000819050610fd882610fb6565b919050565b6000610fe882610fca565b9050919050565b610ff881610fdd565b82525050565b600060a08201905081810360008301526110188188610e10565b9050818103602083015261102c8187610ee0565b905061103b6040830186610f69565b6110486060830185610f78565b6110556080830184610fef565b9695505050505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61109481610d56565b82525050565b60006110a6838361108b565b60208301905092915050565b6000602082019050919050565b60006110ca8261105f565b6110d4818561106a565b93506110df8361107b565b8060005b838110156111105781516110f7888261109a565b9750611102836110b2565b9250506001810190506110e3565b5085935050505092915050565b6000602082019050818103600083015261113781846110bf565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061116a8261113f565b9050919050565b61117a8161115f565b811461118557600080fd5b50565b60008135905061119781611171565b92915050565b600080604083850312156111b4576111b3610d4c565b5b60006111c285828601610d77565b92505060206111d385828601611188565b9150509250929050565b60008115159050919050565b6111f2816111dd565b82525050565b600060208201905061120d60008301846111e9565b92915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61125082610dff565b810181811067ffffffffffffffff8211171561126f5761126e611218565b5b80604052505050565b6000611282610d42565b905061128e8282611247565b919050565b600067ffffffffffffffff8211156112ae576112ad611218565b5b602082029050602081019050919050565b600080fd5b60006112d76112d284611293565b611278565b905080838252602082019050602084028301858111156112fa576112f96112bf565b5b835b81811015611323578061130f8882610d77565b8452602084019350506020810190506112fc565b5050509392505050565b600082601f83011261134257611341611213565b5b81356113528482602086016112c4565b91505092915050565b6000806040838503121561137257611371610d4c565b5b600061138085828601610d77565b925050602083013567ffffffffffffffff8111156113a1576113a0610d51565b5b6113ad8582860161132d565b9150509250929050565b600060808201905081810360008301526113d18187610e10565b90506113e06020830186610f69565b6113ed6040830185610f78565b6113fa6060830184610fef565b95945050505050565b60006020820190506114186000830184610fef565b92915050565b600080fd5b600067ffffffffffffffff82111561143e5761143d611218565b5b61144782610dff565b9050602081019050919050565b82818337600083830152505050565b600061147661147184611423565b611278565b9050828152602081018484840111156114925761149161141e565b5b61149d848285611454565b509392505050565b600082601f8301126114ba576114b9611213565b5b81356114ca848260208601611463565b91505092915050565b600067ffffffffffffffff8211156114ee576114ed611218565b5b602082029050602081019050919050565b600061151261150d846114d3565b611278565b90508083825260208201905060208402830185811115611535576115346112bf565b5b835b8181101561157c57803567ffffffffffffffff81111561155a57611559611213565b5b80860161156789826114a5565b85526020850194505050602081019050611537565b5050509392505050565b600082601f83011261159b5761159a611213565b5b81356115ab8482602086016114ff565b91505092915050565b6115bd81610f55565b81146115c857600080fd5b50565b6000813590506115da816115b4565b92915050565b600080600080608085870312156115fa576115f9610d4c565b5b600085013567ffffffffffffffff81111561161857611617610d51565b5b611624878288016114a5565b945050602085013567ffffffffffffffff81111561164557611644610d51565b5b61165187828801611586565b9350506040611662878288016115cb565b925050606061167387828801610d77565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806116f557607f821691505b602082108103611708576117076116ae565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061174882610d56565b915061175383610d56565b925082820190508082111561176b5761176a61170e565b5b92915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026117d37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611796565b6117dd8683611796565b95508019841693508086168417925050509392505050565b6000819050919050565b600061181a61181561181084610d56565b6117f5565b610d56565b9050919050565b6000819050919050565b611834836117ff565b61184861184082611821565b8484546117a3565b825550505050565b600090565b61185d611850565b61186881848461182b565b505050565b5b8181101561188c57611881600082611855565b60018101905061186e565b5050565b601f8211156118d1576118a281611771565b6118ab84611786565b810160208510156118ba578190505b6118ce6118c685611786565b83018261186d565b50505b505050565b600082821c905092915050565b60006118f4600019846008026118d6565b1980831691505092915050565b600061190d83836118e3565b9150826002028217905092915050565b61192682610db9565b67ffffffffffffffff81111561193f5761193e611218565b5b61194982546116dd565b611954828285611890565b600060209050601f8311600181146119875760008415611975578287015190505b61197f8582611901565b8655506119e7565b601f19841661199586611771565b60005b828110156119bd57848901518255600182019150602085019450602081019050611998565b868310156119da57848901516119d6601f8916826118e3565b8355505b6001600288020188555050505b505050505050565b60006119fa82610d56565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611a2c57611a2b61170e565b5b60018201905091905056fea2646970667358221220ccdc6ab7b93e611f8443cc5f0b98f69c35d41c5f10fcc03d41fa0fda16becaaf64736f6c63430008180033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100935760003560e01c80639a7d014c116100665780639a7d014c14610148578063afdda4ec1461017b578063d5f38dae146101ab578063d7fd5c0f146101c7578063dd4a335a146101e557610093565b80631a8cbcaa1461009857806333b4097b146100cc57806343859632146100fc5780637055d3681461012c575b600080fd5b6100b260048036038101906100ad9190610d8c565b610201565b6040516100c3959493929190610ffe565b60405180910390f35b6100e660048036038101906100e19190610d8c565b6103d9565b6040516100f3919061111d565b60405180910390f35b6101166004803603810190610111919061119d565b6104b3565b60405161012391906111f8565b60405180910390f35b6101466004803603810190610141919061135b565b61052c565b005b610162600480360381019061015d9190610d8c565b6107f2565b60405161017294939291906113b7565b60405180910390f35b61019560048036038101906101909190610d8c565b6108db565b6040516101a29190611403565b60405180910390f35b6101c560048036038101906101c091906115e0565b610916565b005b6101cf6109d7565b6040516101dc919061111d565b60405180910390f35b6101ff60048036038101906101fa9190610d8c565b610b67565b005b6060806000806000806000878154811061021e5761021d61167f565b5b9060005260206000209060070201905080600001816001018260020160009054906101000a900467ffffffffffffffff1683600501548460060160009054906101000a900460ff16848054610272906116dd565b80601f016020809104026020016040519081016040528092919081815260200182805461029e906116dd565b80156102eb5780601f106102c0576101008083540402835291602001916102eb565b820191906000526020600020905b8154815290600101906020018083116102ce57829003601f168201915b5050505050945083805480602002602001604051908101604052809291908181526020016000905b828210156103bf578382906000526020600020018054610332906116dd565b80601f016020809104026020016040519081016040528092919081815260200182805461035e906116dd565b80156103ab5780601f10610380576101008083540402835291602001916103ab565b820191906000526020600020905b81548152906001019060200180831161038e57829003601f168201915b505050505081526020019060010190610313565b505050509350955095509550955095505091939590929450565b606060008083815481106103f0576103ef61167f565b5b906000526020600020906007020190506000816001018054905067ffffffffffffffff81111561042357610422611218565b5b6040519080825280602002602001820160405280156104515781602001602082028036833780820191505090505b50905060005b82600101805490508110156104a8578260040160008281526020019081526020016000205482828151811061048f5761048e61167f565b5b6020026020010181815250508080600101915050610457565b508092505050919050565b60008083815481106104c8576104c761167f565b5b906000526020600020906007020160030160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60008083815481106105415761054061167f565b5b906000526020600020906007020190506000600181111561056557610564610f87565b5b8160060160009054906101000a900460ff16600181111561058957610588610f87565b5b146105c0576040517f6fcc1e3e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806005015442106105fd576040517f3f7c7c3d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060030160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610683576040517f46bec57800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000825114806106b557508060020160009054906101000a900467ffffffffffffffff1667ffffffffffffffff168251115b156106ec576040517f7b2c6c5100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b825181101561079257600083828151811061070d5761070c61167f565b5b6020026020010151905082600101805490508110610757576040517f82f7abc900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001836004016000838152602001908152602001600020600082825461077d919061173d565b925050819055505080806001019150506106ef565b5060018160030160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505050565b6000818154811061080257600080fd5b9060005260206000209060070201600091509050806000018054610825906116dd565b80601f0160208091040260200160405190810160405280929190818152602001828054610851906116dd565b801561089e5780601f106108735761010080835404028352916020019161089e565b820191906000526020600020905b81548152906001019060200180831161088157829003601f168201915b5050505050908060020160009054906101000a900467ffffffffffffffff16908060050154908060060160009054906101000a900460ff16905084565b60008082815481106108f0576108ef61167f565b5b906000526020600020906007020160060160009054906101000a900460ff169050919050565b60008060018160018154018082558091505003906000526020600020906007020190508481600001908161094a919061191d565b5083816001019080519060200190610963929190610c68565b50828160020160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550814261099b919061173d565b816005018190555060008160060160006101000a81548160ff021916908360018111156109cb576109ca610f87565b5b02179055505050505050565b60606000805b600080549050811015610a6457600060018111156109fe576109fd610f87565b5b60008281548110610a1257610a1161167f565b5b906000526020600020906007020160060160009054906101000a900460ff166001811115610a4357610a42610f87565b5b03610a57578180610a53906119ef565b9250505b80806001019150506109dd565b5060008167ffffffffffffffff811115610a8157610a80611218565b5b604051908082528060200260200182016040528015610aaf5781602001602082028036833780820191505090505b5090506000805b600080549050811015610b5d5760006001811115610ad757610ad6610f87565b5b60008281548110610aeb57610aea61167f565b5b906000526020600020906007020160060160009054906101000a900460ff166001811115610b1c57610b1b610f87565b5b03610b505780838381518110610b3557610b3461167f565b5b6020026020010181815250508180610b4c906119ef565b9250505b8080600101915050610ab6565b5081935050505090565b6000808281548110610b7c57610b7b61167f565b5b90600052602060002090600702019050600180811115610b9f57610b9e610f87565b5b8160060160009054906101000a900460ff166001811115610bc357610bc2610f87565b5b03610bfa576040517f6472a02800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600501544211610c37576040517feaa1e3b900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018160060160006101000a81548160ff02191690836001811115610c5f57610c5e610f87565b5b02179055505050565b828054828255906000526020600020908101928215610cb0579160200282015b82811115610caf578251829081610c9f919061191d565b5091602001919060010190610c88565b5b509050610cbd9190610cc1565b5090565b5b80821115610ce15760008181610cd89190610ce5565b50600101610cc2565b5090565b508054610cf1906116dd565b6000825580601f10610d035750610d22565b601f016020900490600052602060002090810190610d219190610d25565b5b50565b5b80821115610d3e576000816000905550600101610d26565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610d6981610d56565b8114610d7457600080fd5b50565b600081359050610d8681610d60565b92915050565b600060208284031215610da257610da1610d4c565b5b6000610db084828501610d77565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610df3578082015181840152602081019050610dd8565b60008484015250505050565b6000601f19601f8301169050919050565b6000610e1b82610db9565b610e258185610dc4565b9350610e35818560208601610dd5565b610e3e81610dff565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b6000610e9182610db9565b610e9b8185610e75565b9350610eab818560208601610dd5565b610eb481610dff565b840191505092915050565b6000610ecb8383610e86565b905092915050565b6000602082019050919050565b6000610eeb82610e49565b610ef58185610e54565b935083602082028501610f0785610e65565b8060005b85811015610f435784840389528151610f248582610ebf565b9450610f2f83610ed3565b925060208a01995050600181019050610f0b565b50829750879550505050505092915050565b600067ffffffffffffffff82169050919050565b610f7281610f55565b82525050565b610f8181610d56565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028110610fc757610fc6610f87565b5b50565b6000819050610fd882610fb6565b919050565b6000610fe882610fca565b9050919050565b610ff881610fdd565b82525050565b600060a08201905081810360008301526110188188610e10565b9050818103602083015261102c8187610ee0565b905061103b6040830186610f69565b6110486060830185610f78565b6110556080830184610fef565b9695505050505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61109481610d56565b82525050565b60006110a6838361108b565b60208301905092915050565b6000602082019050919050565b60006110ca8261105f565b6110d4818561106a565b93506110df8361107b565b8060005b838110156111105781516110f7888261109a565b9750611102836110b2565b9250506001810190506110e3565b5085935050505092915050565b6000602082019050818103600083015261113781846110bf565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061116a8261113f565b9050919050565b61117a8161115f565b811461118557600080fd5b50565b60008135905061119781611171565b92915050565b600080604083850312156111b4576111b3610d4c565b5b60006111c285828601610d77565b92505060206111d385828601611188565b9150509250929050565b60008115159050919050565b6111f2816111dd565b82525050565b600060208201905061120d60008301846111e9565b92915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61125082610dff565b810181811067ffffffffffffffff8211171561126f5761126e611218565b5b80604052505050565b6000611282610d42565b905061128e8282611247565b919050565b600067ffffffffffffffff8211156112ae576112ad611218565b5b602082029050602081019050919050565b600080fd5b60006112d76112d284611293565b611278565b905080838252602082019050602084028301858111156112fa576112f96112bf565b5b835b81811015611323578061130f8882610d77565b8452602084019350506020810190506112fc565b5050509392505050565b600082601f83011261134257611341611213565b5b81356113528482602086016112c4565b91505092915050565b6000806040838503121561137257611371610d4c565b5b600061138085828601610d77565b925050602083013567ffffffffffffffff8111156113a1576113a0610d51565b5b6113ad8582860161132d565b9150509250929050565b600060808201905081810360008301526113d18187610e10565b90506113e06020830186610f69565b6113ed6040830185610f78565b6113fa6060830184610fef565b95945050505050565b60006020820190506114186000830184610fef565b92915050565b600080fd5b600067ffffffffffffffff82111561143e5761143d611218565b5b61144782610dff565b9050602081019050919050565b82818337600083830152505050565b600061147661147184611423565b611278565b9050828152602081018484840111156114925761149161141e565b5b61149d848285611454565b509392505050565b600082601f8301126114ba576114b9611213565b5b81356114ca848260208601611463565b91505092915050565b600067ffffffffffffffff8211156114ee576114ed611218565b5b602082029050602081019050919050565b600061151261150d846114d3565b611278565b90508083825260208201905060208402830185811115611535576115346112bf565b5b835b8181101561157c57803567ffffffffffffffff81111561155a57611559611213565b5b80860161156789826114a5565b85526020850194505050602081019050611537565b5050509392505050565b600082601f83011261159b5761159a611213565b5b81356115ab8482602086016114ff565b91505092915050565b6115bd81610f55565b81146115c857600080fd5b50565b6000813590506115da816115b4565b92915050565b600080600080608085870312156115fa576115f9610d4c565b5b600085013567ffffffffffffffff81111561161857611617610d51565b5b611624878288016114a5565b945050602085013567ffffffffffffffff81111561164557611644610d51565b5b61165187828801611586565b9350506040611662878288016115cb565b925050606061167387828801610d77565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806116f557607f821691505b602082108103611708576117076116ae565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061174882610d56565b915061175383610d56565b925082820190508082111561176b5761176a61170e565b5b92915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026117d37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611796565b6117dd8683611796565b95508019841693508086168417925050509392505050565b6000819050919050565b600061181a61181561181084610d56565b6117f5565b610d56565b9050919050565b6000819050919050565b611834836117ff565b61184861184082611821565b8484546117a3565b825550505050565b600090565b61185d611850565b61186881848461182b565b505050565b5b8181101561188c57611881600082611855565b60018101905061186e565b5050565b601f8211156118d1576118a281611771565b6118ab84611786565b810160208510156118ba578190505b6118ce6118c685611786565b83018261186d565b50505b505050565b600082821c905092915050565b60006118f4600019846008026118d6565b1980831691505092915050565b600061190d83836118e3565b9150826002028217905092915050565b61192682610db9565b67ffffffffffffffff81111561193f5761193e611218565b5b61194982546116dd565b611954828285611890565b600060209050601f8311600181146119875760008415611975578287015190505b61197f8582611901565b8655506119e7565b601f19841661199586611771565b60005b828110156119bd57848901518255600182019150602085019450602081019050611998565b868310156119da57848901516119d6601f8916826118e3565b8355505b6001600288020188555050505b505050505050565b60006119fa82610d56565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611a2c57611a2b61170e565b5b60018201905091905056fea2646970667358221220ccdc6ab7b93e611f8443cc5f0b98f69c35d41c5f10fcc03d41fa0fda16becaaf64736f6c63430008180033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 43,
        "contract": "contracts/PollSystem.sol:PollSystem",
        "label": "m_polls",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_struct(Poll)39_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Poll)39_storage)dyn_storage": {
        "base": "t_struct(Poll)39_storage",
        "encoding": "dynamic_array",
        "label": "struct PollSystem.Poll[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_enum(State)18": {
        "encoding": "inplace",
        "label": "enum PollSystem.State",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Poll)39_storage": {
        "encoding": "inplace",
        "label": "struct PollSystem.Poll",
        "members": [
          {
            "astId": 20,
            "contract": "contracts/PollSystem.sol:PollSystem",
            "label": "question",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 23,
            "contract": "contracts/PollSystem.sol:PollSystem",
            "label": "options",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_string_storage)dyn_storage"
          },
          {
            "astId": 25,
            "contract": "contracts/PollSystem.sol:PollSystem",
            "label": "possibleAnswers",
            "offset": 0,
            "slot": "2",
            "type": "t_uint64"
          },
          {
            "astId": 29,
            "contract": "contracts/PollSystem.sol:PollSystem",
            "label": "hasVoted",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_bool)"
          },
          {
            "astId": 33,
            "contract": "contracts/PollSystem.sol:PollSystem",
            "label": "votes",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_uint256)"
          },
          {
            "astId": 35,
            "contract": "contracts/PollSystem.sol:PollSystem",
            "label": "endTime",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 38,
            "contract": "contracts/PollSystem.sol:PollSystem",
            "label": "state",
            "offset": 0,
            "slot": "6",
            "type": "t_enum(State)18"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      }
    }
  }
}